#   -*- mode: org; fill-column: 60 -*-
#+STARTUP: showall
#+TITLE:   XVII. Stages Contents

[[https://img.shields.io/badge/made%20by-Chenla%20Institute-999999.svg?style=flat-square]] 
[[https://img.shields.io/badge/class-w & w-56B4E9.svg?style=flat-square]]
[[https://img.shields.io/badge/entity-TOC-0072B2.svg?style=flat-square]]
[[https://img.shields.io/badge/status-wip-D55E00.svg?style=flat-square]]
[[https://img.shields.io/badge/licence-MIT%2FCC%20BY--SA%204.0-000000.svg?style=flat-square]]

bibliography:~/proj/chenla/hoard/bib.bib

[[[../../index.org][top]]] [[[../index.org][up]]]

* XVII. Stages Contents
:PROPERTIES:
:CUSTOM_ID:
:Name:     /home/deerpig/proj/chenla/warp/17/index.org
:Created:  2018-05-19T10:15@Prek Leap (11.642600N-104.919210W)
:ID:       d617781b-3fcc-4efa-ab87-6dcb490d423e
:VER:      579971788.360458250
:GEO:      48P-491193-1287029-15
:BXID:     proj:HTO4-0735
:Class:    primer
:Entity:   toc
:Status:   wip
:Licence:  MIT/CC BY-SA 4.0
:END:

  - Contents
  - Abstract
  - [[./intro.org][Introduction]]

  - Precursors -> model on how the internet started and grew
    - Dog Stage
      on the internet no one knows you're a dog
    - store and forward
    - small and sparse
    - early identity <- from gibson, that cyberspace is not
      the same as meatspace.  This pulled all members of the
      net, to matter how far and wide they were physically
      separated from each other into a new kind of proximity
      that gave them a new kind of freedom.
    - color kills monochrome -- move from curses based
      applications to GUI interfaces
    - transitional metaphors
      apple's gui modeled after SRI's (not Xerox) Windows
      GUI and later MS Office used metaphors for people to
      make the transition from using tools for manipulating
      information on paper, to manipulating information
      digitally.
    - the death of native digital interfaces -- man-machine
      interfaces had evolved into powerful and sophisticated
      tools.  But the learning curve was initially steep,
      and people outside of the field found it difficult to
      get their heads around.  The GUI threw away all of
      that work and started from scratch.  Now that the
      metaphors have little or no meaning to new
      generations, some of the innovations from early
      software are being rediscovered -- eventually a
      graphical native digital interface will emerge that
      will merge the two worlds.  We are still far from that
      today.
    - revenge of the designers
      the browser wars sowed the seeds that eventually broke
      the Web.  The web was originally designed to be a
      network of information, the idea that different
      browsers displayed information differently was a
      feature, not a bug.  But non-technical people coming
      to computers, and graphics designers working for
      companies who were sold on the web by using metaphors
      in the same way that the desktop metaphor helped ease
      people into using computers.  A web page is a digital
      magazine, or shopfront.  Sadly, people took this
      literally and designers who had previously been
      trained to do graphic design for print were put in
      charge of creating web sites.  They demanded that
      everything looked exactly how they wanted it to look
      and that it look exactly the same on all browsers.
      Netscape and Microsoft did a really insanely stupid
      thing and instead of teaching people the way the
      system worked and the advantages of that over print,
      they started adding features to make the designers
      happy.  This turned into a browser war with Microsoft
      intent on taking over the entire internet in the same
      way that Windows dominated PC operating systems.  A
      lot of the problems we face today on the Web today are
      because of that assholery.
    - Eternal September
      https://en.wikipedia.org/wiki/Eternal_September 
      The web shows up on mainstream radar. 
    - the rise of the directories
    - the rise of the search engines 
    - iphone and the great dumbing down
      The true horror is that it's not just the end users
      who are demanding everything be user-friendly, now the
      majority of developers do too.

      Most development is now little more than designing a
      graphical front end using one of a growing zoo of
      frameworks and back end code becoming little more than
      glueing together functions from existing libraries.
      The result is 90% of the applications and websites
      that people see today.
    - centralization and innovation grinds to a halt

  - Network Roadmap
    - give people the big picture, by pulling an Al Gore,
      travel far and wide with your slide-deck, and then
      don't leave until you've set up a local chapter for
      those to sign up which will eventually become a node
      in the network.  Then move on to the next place.  Get
      people, organizations and governments to sign up.
    - start with engelbart's knowledge workshop for people
      with advanced skills -- powerful, with steep learning
      curve, so early adoption, like the internet, will at
      first be small and sparse.
    - make each person's knowledge workshop to be
      interoperable with everyone elses -- so workgroups can
      effectively work together using an aggregate share
      workshop.
    - start integrating with IOT but with far more powerful
      ways of integrating things, and a solid security model
    - establish guilds -- meta organizations that provide
      oversight and ensure transparancy and adherence to
      standards.  Take care that system is designed to
      encourage innovation and experimentation and not
      stiffle it.
    - introduce ERP-like applications so that the system can
      be used to manage whole brick and mortor companies.
    - do the same thing for the factory floor -- ERP is
      primarily used in the office.
    - do the same thing for education
    - do the same thing for governments
    - now we introduce ad-hoc self-detroying value chains
      that allow people to assemble processes that span not
      just departments but companies.  This is the biggest
      step because it requires us to introduce logistics,
      and transactions betwee different people and
      organizations in different steps of each process.
    - as all of this grows, the network is no longer sparse,
      and it is working at all levels from personal up to
      and connection large organizations together in a way
      that hasn't been possible before.


   - Interface Roadmap
      - begin creating different levels to applications, so
        that when you are a noob you get a "user-friendly"
        interface with a shallow learning curve.  This
        limits what you can do but it's easy to use.
      - Then if you want to do more, you learn more,
        complete the level which unlocks the next level
        which has a higher learning curve but is more
        powerful (this is where most professionals will
        stop), this acts as a way of easying people into the
        orginal application.  It should include most of the
        features of the master-level interface but will have
        a slower interface to make it easier to learn.
      - the masters interface -- which is that the more
        limited interfaces are built on top of.  This level
        allows you to customize and rewrite anything
        natively, like in emacs, so that customizations
        become part of the running code, not just a
        scripting language that is tacked on to the side
        that uses a lackluster API to talk to the
        application.


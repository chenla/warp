#   -*- mode: org; fill-column: 60 -*-

#+TITLE: 2.10.3 Ontologies
#+STARTUP: showall
#+TOC: headlines 4
#+PROPERTY: filename

[[https://img.shields.io/badge/made%20by-Chenla%20Institute-999999.svg?style=flat-square]] 
[[https://img.shields.io/badge/class-primer-56B4E9.svg?style=flat-square]]
[[https://img.shields.io/badge/type-work-0072B2.svg?style=flat-square]]
[[https://img.shields.io/badge/status-wip-D55E00.svg?style=flat-square]]
[[https://img.shields.io/badge/licence-MIT%2FCC%20BY--SA%204.0-000000.svg?style=flat-square]]

bibliography:~/proj/chenla/hoard/bib.bib

[[[../../index.org][top]]] [[[./index.org][up]]] [[[./02-entities.org][prev]]] [[[./04-pace-layers.org][next]]]

* 2.10.3 Ontologies
:PROPERTIES:
:CUSTOM_ID:
:Name:     /home/deerpig/proj/chenla/warp/ww-ontologies.org
:Created:  2018-03-27T19:43@Prek Leap (11.642600N-104.919210W)
:ID:       b20309ce-541f-48ea-8ac8-1506d3bdd2b3
:VER:      575426696.052189112
:GEO:      48P-491193-1287029-15
:BXID:     proj:HAR2-1804
:Class:    primer
:Type:     work
:Status:   wip
:Licence:  MIT/CC BY-SA 4.0
:END:

** Table of Contents

- What is an ontology?
- Thesaurus
- Relationships
  - Partitive
  - Instantive
  - Hierarchical
    - Broader Term
    - Narrower
    - Equivalent (used for)
    - Related
    - Primary Term
  - Linear
    - Previous
    - Next
- Relationships and Graphs

** TL;DR
  
From way back in the beginning, the idea was to combine
thesaurus relationships with frbr attributes.  Seemed pretty
straight forward at the time.  It wasn't.

I mean, yes, it worked -- early BMF had records broken into
sections and there was meta, which largely held frbr
attributes and then there was a section named /heirarchy/ and
later /tree/.

I've played with using property boxes in org called tree
that was separate from the bog standard PROPERTIES box, but
it never clicked.

A couple of things I learned to cut this down and make
things easier.

  - leveral inheritance where possible
  - never include broader concepts because they should be
    defined as narrower concepts in items higher in the
    heirarchy (which assumes that you always go to that file
    and add it there) it would be better if you add it here,
    then it should be automatically added higher up the tree
    which is not that difficult a trick to pull off in
    elisp.
  - we *REALLY* need a helm interface for searching for and
    adding items.  It will never work by hand.  So that
    means I need to index everything and create a helm
    interface to be able to do that.  It will be a bit of
    work, but I think we're about to the point where this
    has to happen.
  - need a solution to markup inline keywords with broader
    and narrower relationships.  And to do this we need a
    link format that treats links like org-ref citation
    links, so that when you click on it you get a menu of
    what you need to get done.
  - creating templates from the record in the buffer could
    also automate things -- so if you have made a work
    entity record, click and get a menu and it will ask you
    if you want to make another work, or an expression of
    that work.
  - pull informtion from bibtex records to create a burr
    from each one.
  - create person records from author fields in bibtex
    records.
  - tangle bibtex files from burs.

That's a lot of elisp, but again, we're getting to the point
where the structure is mature enough to start making these
tools.  Before the structure was too fluid and changing too
often to justify making the tools. 

** Keeping the five POV models straight

 - entity
 - succession
 - LOD
 - ROC
 - POC

Thinking about this more I don't think we need to go outside
of the Entity model to include the other models.  All
metadata will be within the entity model, so Succession,
LOD, ROC and POC will be incorporated into it.

In many cases it will simply including a link to which
Pace-Layer or LOD that a burr belongs to.

Perhaps they could be combined as well, we need to have
namespaces for each model no matter what it is, so adding
the prefix and then point to the link is not difficult.  It
would be great to be able to do multiple ones at the same
time.

So you pull up a helm list, a choose items and they get
added to the property box at point.

** thesaurus relationships encoding

As a key-value pair:

  :bt: per:charles_dickens--19c_novelist

  #+BT: per:charles_dickens--19c_novelist

  BT: Charles Dickens (19c_novelist)  | Person tspace

** whole/part relationships

 - BTI, NTI : Instantive
 - BTP, NTP : Partitive

** next/prev reltionships

 - BTF, NTF : forward
 - BTB, BTB : back (previous) 

I prefer Next and Previous but we're already using P for
partitive.

** How to reduce verbosity in file headers?

Use VAL to set the  value for the burr and then a list of
relationships:

   #+LAYER:   VAL=civ:culture BT=civ:governance
   #+STAGE:   VAL=civ:tools  NT=civ:clockwork 
   #+LOD:     VAL=lod:min
   #+ENTITY:  VAL=exp:Christmas_Carol--novela RT=exp:Christmas_Carol--play

Do we want to use entities as tspaces?  I suppose there is
no reason why any burr can't belong to multiple tspaces so
long as they are unique to that tspace.
    
This gives us a relatively compact way of setting a number
of values for each type of model that allows us to create
some very interesting structures.



** References

  - IFLA, , Functional requirements of authority data: a
    conceptual model, , (), (2008).
    cite:murtomaa:2008functional

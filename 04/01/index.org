#   -*- mode: org; fill-column: 60 -*-

#+TITLE: 01. Entity Model
#+STARTUP: showall
#+TOC: headlines 4
#+PROPERTY: filename

[[https://img.shields.io/badge/made%20by-Chenla%20Institute-999999.svg?style=flat-square]] 
[[https://img.shields.io/badge/class-primer-56B4E9.svg?style=flat-square]]
[[https://img.shields.io/badge/type-work-0072B2.svg?style=flat-square]]
[[https://img.shields.io/badge/status-wip-D55E00.svg?style=flat-square]]
[[https://img.shields.io/badge/licence-MIT%2FCC%20BY--SA%204.0-000000.svg?style=flat-square]]

bibliography:~/proj/chenla/hoard/bib.bib

[[[../../index.org][top]]] [[[./index.org][up]]] [[[./intro.org][prev]]] [[[./02-ontologies.org][next]]]

* 01. Entity Model
:PROPERTIES:
:CUSTOM_ID:
:Name:     /home/deerpig/proj/chenla/warp/04/01-entities.org
:Created:  2018-03-27T19:33@Prek Leap (11.642600N-104.919210W)
:ID:       674a5f75-68c9-4362-9092-684ef90d4b8f
:VER:      575426074.504527788
:GEO:      48P-491193-1287029-15
:BXID:     proj:HLM3-7344
:Class:    primer
:Type:     work
:Status:   wip
:Licence:  MIT/CC BY-SA 4.0
:END:

** Table of Contents
 - What is an Entity Model
 - FRBR
 - FRAD

** TL;DR

*** Limitations of FRBR/FRAD

First, FRBR/FRAD are designed for third party organizations
to establish bibliographic data of published information and
establish relationships to the different forms those works
take and place them in context with people, corporate
bodies, objects, events, concepts and places.

 - Work
   - Expression
     - Manifestation
       - Item

 - person
 - family
 - corporate body

 - object
 - event
 - concept
 - place

Out goal here is to establish a conceptual model that can be
used for creating externalized world models.  We are trying
to create maps of the world.  So the scope is much broader,
but it also must be far more flexible.  After banging my
head against the wall on this for about 20 years, it's clear
that there way that a detailed model can be constructed that
will even remotely do the job -- so we need a framework that
anyone can use to create their own entity groups and ensure
that any group created by anyone can be interoperable or at
least map to any other group that is describing the same
things.

Second, our goals is that these are not external records
about external things -- meta data -- literally data that
describes data, objects, people etc.  But that there is no
functional difference in many context between them.  Our
metadata for Charles Dickens is all that is left of the man
except whatever mortal remains still exist in his grave.  So
the metadata we have about him is as close and you can get
to him -- everything recorded or written about him or by him
are external and from different POVs and LODs.

There are many use cases we need to cover that FRBR/FRAD
doesn't need to deal with.  Concepts, Events, and Objects
are little more than what is needed to establish subject
headings and ensure that they don't overlap and when they
do, that you can establish a relationship between the two
subject headings in different schemes relative to each
other.

FRBR/FRAD also provide an excellent model towards
establishing whole/part relationships between entities.
More on that later.

A final distinction that should be kept in mind is that
FRBR/FRAD are designed for two distinct use cases,
discovery, finding what you are looking for, or finding what
is in there   And second, retrieval -- how to locate a copy
of what you have discovered.  In our case, the entity model
is simply part of a directed graph that establishes
relationships between entities, and details attributes some
of which are aspects of the entities and others that are
parts of an entity.

*** Generalizing the FRBR model

So let's start with the basics -- the original bibliographic
entity relationship model is abstract and universal enough
to apply to a wide variety of different uses other than
bibliographic records with two small exceptions, by
generalizing the /work/ entity as a concept, and the /item/
entity as an "instance" which should be functionally
equivenlant to more or less of a physical duplicate of a
manifestation.  So a manifestation of a ebook, has an
instance or copy of that manifestation which resides in a
specific directory of a specific memory device.

*** Transitional Entities

We might even need to include a ghost entity for a buffer,
which is a working copy that in volitile memory that is
being modified.  When that is saved, it becomes an instance
of a manifestation, or a manifestation of an expression, but
until then it is a transcient ghost duplicate working
copy. Buffers are very useful concepts that bridge the gap
between something that is in the process of becoming
something else. Then there are processes, which are either
software that converts a file from one format to another, or
a physical production process that combines parts or
fabricates things that become an entity.  

We will need a finer grained model for these transitional or
transcient entities.  Since everything is always in the
process of becoming something else, and each step is a
slight variation from its previous incarnation until a
tipping point is reached which triggers a cascade of change
which results in a state-change -- when one thing transforms
into another.  So there is a zone or range of variations
that come before a state change and then after a state
change.  The zone before approaches the tipping point, and
the changes after approach a different tipping point.  

In addition to the zones between state changes, there are
also zones where something remains largely in the same state
-- this is called a goldilocks zone.  Big History combines
the two types into a single /Goldilocks Threshold/

It's important that these become part of the model because
no two snapshots can be exactly the same because they were
each taken from different POVs, LOD and from the perspective
of a different ROC layer.  A snapshot of a living person
taken from the Fashion layer will be very different from
that taken from the cultural layer where that person will be
seen at a low LOD.

So our bare bones abstract model for anything:

  - [buffer] -> *concept*   ->
    - buffer -> *concept*   -> 
      - *expression*        -> buffer ->
      - *new expression*    -> buffer ->
      - *manifestation*     -> buffer ->
        *v.2 manifestation* -> process (copy
                               or manufacture) -> 
        - *instance*

A buffer is not the same thing as a copy that is being
transmitted.

A backup is simply another duplicate of an instance.

So putting aside buffers we can apply the abstract model to
create a broad range of what I call entity groups.

*** Expanding FRBR authority and subject entities

In FRBR persons, objects, events, concepts etc are all
single entities.  In the model we are developing each of
them will become an entity group which proceeds from
abstract concept to generalized expression of a concept, to
a concrete design or implementation of an object to an
instance or copy of that design that has an owner a maker
(even it it's a process) and a location.

Each entity in the heirarchy describes a snapshot of a
variation that has gone through the process of one entity
becoming another entity.

For example, people and places are very different things are
different times in their existence.  A person as an infant
is a very different thing from that same person as a 19 year
old college freshman.  A building will go through many
different incarnations over time as different shearing
layers change at different times in its existance.  The
entity that describes that building must take that into
account and take periodic snapshots of the different
incarnations the building goes through over time.

*** The need for more than the entity model


But we will need a different abstract model for describing
the different shearing layers and their different rates of
change.

In the same way, how we represent that build depends on how
close or far away we are from that building.  So we need a
model that make it possible to create different snapshots of
the building at different LODs.  This is important because
the faster pace-layer will be changing faster than the
slower pace-layer and different snapshots will be taken at
slightly different stages of a person's life, from different
perspectives and some for close up and others far away.

The will need a fourth model that represent the
different stages that something passes through over time.
For a person, there are different developmental stages of a
person's lifetime.  The same goes for a company, which might
start as a two man startup in a garage and then grow into a
funded company in a small office, and so on through
different stages of it's development to becoming an Apple or
Google.  We call this a /succession stage model/.

  - entity model
  - level of detail model
  - rate of change model
  - succession stage model (development stages)
  - process of change model (stability ranges and
    state-change thresholds)

These five POV models provide a solid framework for
understanding the world around us.  At this point I am sure
that many people reading this will be thinking that it will
be impossible to realize all six models for everything.  And
that is correct.  Different things will be primarily
understood from the POV of one or two of these models at most.

But the enitity model will be where most metadata will be
included that will be referenced by all the other models.
There is no question that it will take a lot of initial work
to get this larger scheme large enough to reach a theshold
where the advantages will outweigh the initial work to get
it started, and this will likely be measured in decades, not
years.  But once it's in place -- it will make a lot of
things easy which are now difficult or at least impractible
and in some cases impossible.

*** Warding off another Metacrap

I'm sure in the early days, there will be criticisms simular
to Cory Doctorow's essay, Metacrap.  But many of the
assumptions Doctorow made in the essay were based on the
assumption that metadata would be collected and composed the
way that library catalog bibliographic records were created
in the past.  The world today runs more on metadata, than
the data it describes, otherwise we would not have the
concept of Big Data that is in large part responsible for
approaching a tippin-point which will trigger 
revolution in Artificial Intelligence in the coming
decades.

There is no way of knowing how these six models will be
implemented twenty years from now.  That's why they are
included here in a work about first principles.  Our clumsy
first drafts at implementing these models will seem
laughably naive and simplistic in the years to come.
However they provide a good starting point that will
increase the usefulness of machine and human understandable
metadata by orders of magnitude no matter how they are
implemented in the near or distant future.
